{"version":3,"sources":["Statistics/Statistics.js","FeedbackOptions/FeedbackOptions.js","Section/Section.js","Notification/Notification.js","App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","type","onClick","Section","title","children","Notification","message","App","state","visible","goodIncrement","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","show","neutralIncrement","badIncrement","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAoBeA,EApBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,gCACE,sCACO,+BAAOJ,OAEd,yCACU,+BAAOC,OAEjB,qCACM,+BAAOC,OAEb,uCACQ,+BAAOC,OAEf,mDACoB,+BAAOC,IAD3B,WCAWC,EAdS,SAAC,GAAD,IAAGL,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAlB,OACtB,gCACE,wBAAQI,KAAK,SAASC,QAASP,EAA/B,kBAGA,wBAAQM,KAAK,SAASC,QAASN,EAA/B,qBAGA,wBAAQK,KAAK,SAASC,QAASL,EAA/B,iBAGA,+CCLWM,EANC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,qCACE,6BAAKD,IACJC,MCDUC,EAFM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KC+E3BC,E,4MAxEbC,MAAQ,CACNd,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,EACPC,mBAAoB,EACpBW,SAAS,G,EAGXC,cAAgB,WACd,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BlB,KAAMkB,EAAUlB,KAAO,MAEzB,EAAKmB,qBACL,EAAKC,kCACL,EAAKC,Q,EAEPC,iBAAmB,WACjB,EAAKL,UAAS,SAAAC,GAAS,MAAK,CAC1BjB,QAASiB,EAAUjB,QAAU,MAE/B,EAAKkB,qBACL,EAAKC,kCACL,EAAKC,Q,EAEPE,aAAe,WACb,EAAKN,UAAS,SAAAC,GAAS,MAAK,CAC1BhB,IAAKgB,EAAUhB,IAAM,MAEvB,EAAKiB,qBACL,EAAKC,kCACL,EAAKC,Q,EAEPF,mBAAqB,WACnB,EAAKF,UAAS,SAAAC,GAAS,MAAK,CAC1Bf,MAAOe,EAAUlB,KAAOkB,EAAUjB,QAAUiB,EAAUhB,S,EAG1DkB,gCAAkC,WAChC,EAAKH,UAAS,SAAAC,GAAS,MAAK,CAC1Bd,oBACIc,EAAUlB,KAAOkB,EAAUjB,QAAUiB,EAAUhB,MAC9CgB,EAAUlB,KAAOkB,EAAUjB,QAAUiB,EAAUhB,KAClD,S,EAINmB,KAAO,WACL,EAAKJ,SAAS,CAAEF,SAAS,K,4CAG3B,WACE,OACE,eAAC,EAAD,CAASN,MAAM,wBAAf,UACE,cAAC,EAAD,CACET,KAAMwB,KAAKR,cACXf,QAASuB,KAAKF,iBACdpB,IAAKsB,KAAKD,eAEVC,KAAKV,MAAMC,SACX,cAAC,EAAD,CACEf,KAAMwB,KAAKV,MAAMd,KACjBC,QAASuB,KAAKV,MAAMb,QACpBC,IAAKsB,KAAKV,MAAMZ,IAChBC,MAAOqB,KAAKV,MAAMX,MAClBC,mBAAoBoB,KAAKV,MAAMV,sBAE7B,cAAC,EAAD,CAAcQ,QAAQ,6B,GApElBa,IAAMC,WCFxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.18e8967e.chunk.js","sourcesContent":["const Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <div>\r\n    <p>\r\n      Good:<span>{good}</span>\r\n    </p>\r\n    <p>\r\n      Neutral:<span>{neutral}</span>\r\n    </p>\r\n    <p>\r\n      Bad:<span>{bad}</span>\r\n    </p>\r\n    <p>\r\n      Total:<span>{total}</span>\r\n    </p>\r\n    <p>\r\n      Positive feedback:<span>{positivePercentage}</span>%\r\n    </p>\r\n  </div>\r\n);\r\n\r\nexport default Statistics;\r\n","const FeedbackOptions = ({ good, neutral, bad }) => (\r\n  <div>\r\n    <button type=\"button\" onClick={good}>\r\n      good\r\n    </button>\r\n    <button type=\"button\" onClick={neutral}>\r\n      neutral\r\n    </button>\r\n    <button type=\"button\" onClick={bad}>\r\n      bad\r\n    </button>\r\n    <h2>Statistic</h2>\r\n  </div>\r\n);\r\nexport default FeedbackOptions;\r\n","const Section = ({ title, children }) => (\r\n  <>\r\n    <h1>{title}</h1>\r\n    {children}\r\n  </>\r\n);\r\nexport default Section;\r\n","const Notification = ({ message }) => <p>{message}</p>;\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport Statistics from './Statistics';\r\nimport FeedbackOptions from './FeedbackOptions';\r\nimport Section from './Section';\r\nimport Notification from './Notification';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n    total: 0,\r\n    positivePercentage: 0,\r\n    visible: false,\r\n  };\r\n\r\n  goodIncrement = () => {\r\n    this.setState(prevState => ({\r\n      good: prevState.good + 1,\r\n    }));\r\n    this.countTotalFeedback();\r\n    this.countPositiveFeedbackPercentage();\r\n    this.show();\r\n  };\r\n  neutralIncrement = () => {\r\n    this.setState(prevState => ({\r\n      neutral: prevState.neutral + 1,\r\n    }));\r\n    this.countTotalFeedback();\r\n    this.countPositiveFeedbackPercentage();\r\n    this.show();\r\n  };\r\n  badIncrement = () => {\r\n    this.setState(prevState => ({\r\n      bad: prevState.bad + 1,\r\n    }));\r\n    this.countTotalFeedback();\r\n    this.countPositiveFeedbackPercentage();\r\n    this.show();\r\n  };\r\n  countTotalFeedback = () => {\r\n    this.setState(prevState => ({\r\n      total: prevState.good + prevState.neutral + prevState.bad,\r\n    }));\r\n  };\r\n  countPositiveFeedbackPercentage = () => {\r\n    this.setState(prevState => ({\r\n      positivePercentage:\r\n        ((prevState.good + prevState.neutral - prevState.bad) /\r\n          (prevState.good + prevState.neutral + prevState.bad)) *\r\n        100,\r\n    }));\r\n  };\r\n\r\n  show = () => {\r\n    this.setState({ visible: true });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Section title=\"Please leave feedback\">\r\n        <FeedbackOptions\r\n          good={this.goodIncrement}\r\n          neutral={this.neutralIncrement}\r\n          bad={this.badIncrement}\r\n        />\r\n        {(this.state.visible && (\r\n          <Statistics\r\n            good={this.state.good}\r\n            neutral={this.state.neutral}\r\n            bad={this.state.bad}\r\n            total={this.state.total}\r\n            positivePercentage={this.state.positivePercentage}\r\n          />\r\n        )) || <Notification message=\"No feedback given\" />}\r\n      </Section>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}